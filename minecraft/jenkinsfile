pipeline {
    agent any

    environment {
        // Credentials for AWS and Docker
        AWS_ACCESS_KEY_ID = credentials('AWS_ACCESS_KEY_ID')
        AWS_SECRET_ACCESS_KEY = credentials('AWS_SECRET_ACCESS_KEY')
        SONAR_URL = "http://44.204.109.146:9000/" // URL for SonarQube
        region = 'us-east-1'
        clusterName = 'minecraft-eks-cluster'
    }

    tools {
        // Define tools used in the pipeline
        terraform 'terraform'
        maven 'localMaven'
        jdk 'localJdk'
    }

    stages {
        stage('Git Checkout') {
            steps {
                // Clone the application code from GitHub
                echo 'Cloning the application code...'
                git branch: 'main', url: 'https://github.com/Dappyplay4u/minecraft-deployment.git'
            }
        }

        stage('Approval to Begin') {
            steps {
                // Request manual approval before proceeding
                input "Please review the changes and approve to continue"
            }
        }

        stage('Build and Test') {
            steps {
                // Build and test the Maven project
                dir('minecraft') {
                    sh 'mvn -U clean package'
                }
            }
        }

        stage('Unit Test') {
            steps {
                dir('minecraft') {
                    sh 'mvn test'
                }
            }
        }

        stage('Integration Test') {
            steps {
                // Run integration tests
                dir('minecraft') {
                    sh 'mvn verify -DskipUnitTests'
                }
            }
        }

        stage('Checkstyle Code Analysis') {
            steps {
                // Perform code style analysis
                dir('minecraft') {
                    sh 'mvn checkstyle:checkstyle'
                }
            }
            post {
                // Post-processing step for success!!!
                success {
                    echo 'Checkstyle analysis completed successfully'
                }
            }
        }

        stage('Static Code Analysis') {
            steps {
                // Run static code analysis with SonarQube
                withCredentials([string(credentialsId: 'SonarQube', variable: 'SONAR_AUTH_TOKEN')]) {
                    dir('minecraft') {
                        sh "mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}"
                    }
                }
            }
        }

        stage("Docker Build & Push") {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'docker', toolName: 'docker') {
                        dir('minecraft') {
                            sh 'docker build -t minecraft .'
                            sh 'docker tag minecraft dappyplay4u/minecraft:latest'
                            sh 'docker push dappyplay4u/minecraft:latest'
                        }
                    }
                }
            }
        }

        stage('Deploy to container') {
            steps {
                sh 'docker run -d -p 8085:8090 dappyplay4u/minecraft:latest'
            }
        }

        stage("Deploy to EKS") {
            steps {
                script {
                    // Replace the image tag in Kubernetes YAML files with the Jenkins build number
                    sh "sed -i 's/replaceImageTag/${BUILD_NUMBER}/g' minecraft/minecraft-deployment.yaml"
                    sh "sed -i 's/replaceImageTag/${BUILD_NUMBER}/g' minecraft/minecraft-namespace.yaml"
                    sh "sed -i 's/replaceImageTag/${BUILD_NUMBER}/g' minecraft/minecraft-pv-pvc.yaml"

                    // Update kubeconfig for the specified Amazon EKS cluster
                    sh "aws eks update-kubeconfig --name ${clusterName} --region ${region}"

                    // Apply Kubernetes configuration files to deploy the Minecraft application
                    dir('minecraft') {
                        sh "kubectl apply -f minecraft-deployment.yaml"
                        sh "kubectl apply -f minecraft-namespace.yaml"
                        sh "kubectl apply -f minecraft-pv-pvc.yaml"
                    }
                }
    post {
        success {
            echo 'Minecraft has been successfully Containerized!'
        }
    }
}
